apiVersion: v1
kind: Service
metadata:
  name: app1
  labels:
    app: app1
    service: app1
spec:
  ports:
  - port: 5000
    name: http
  selector:
    app: app1
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: apps
  labels:
    account: apps
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app1
  labels:
    app: app1
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app1
      version: v1
  template:
    metadata:
      labels:
        app: app1
        version: v1
    spec:
      serviceAccountName: apps
      containers:
      - name: app1
        image: docker.io/bisonlou/app1
        ports:
        - containerPort: 5000
        securityContext:
          runAsUser: 1000
        # resources:
        #   limits:
        #     cpu: 10
        #     memory: 128Mi
---
##################################################################################################
# App2
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: app2
  labels:
    app: app2
    service: app2
spec:
  ports:
  - port: 5001
    name: http
  selector:
    app: app2

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app2
  labels:
    app: app2
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app2
      version: v1
  template:
    metadata:
      labels:
        app: app2
        version: v1
    spec:
      serviceAccountName: apps
      containers:
      - name: app2
        image: docker.io/bisonlou/app2
        ports:
        - containerPort: 5001
        securityContext:
          runAsUser: 1000
        resources:
          # limits:
          #   cpu: 10
          #   memory: 128Mi
---
##################################################################################################
# App3
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: app3
  labels:
    app: app3
    service: app3
spec:
  ports:
  - port: 5002
    name: http
  selector:
    app: app3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app3
  labels:
    app: app3
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app3
      version: v1
  template:
    metadata:
      labels:
        app: app3
        version: v1
    spec:
      serviceAccountName: apps
      containers:
      - name: app3
        image: docker.io/bisonlou/app3
        ports:
        - containerPort: 5002
        env:
          - name: DATABASE_NAME
            value: test
          - name: DATABASE_USER
            value: postgres
          - name: HOST_NAME
            value: "Bison Test"
          - name: DATABASE_HOST
            value: postgres
          - name: DATABASE_PASSWORD
            value: postgres
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: "service.name=app3"
          - name: OTEL_METRICS_EXPORTER
            value: none
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: "http://jaeger-collector:14268"
        securityContext:
          runAsUser: 1000
        # resources:
        #   limits:
        #     cpu: 10
        #     memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    service: postgres
spec:
  ports:
  - port: 5432
    name: tcp-postgres
  selector:
    service: postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    service: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      service: postgres
  template:
    metadata:
      labels:
        service: postgres
    spec:
      containers:
        - name: postgres
          image: postgres
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: test
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: postgres

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: app-ingress
  namespace: services
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  tls:
    - hosts:
        - '*.test.oneacrefund.org'
      secretName: oaftest-tls
  rules:
    - host: api.test.oneacrefund.org
      http:
        paths:
          - path: /api/app1/v1(/|$)(.*)
            pathType: Prefix
            backend:
              serviceName: app1
              servicePort: 5000